# https://taskfile.dev

version: "3"

vars:
  PROJECT_ROOT:
    sh: "echo -n $PWD"
  SOURCE_PATH: "{{.PROJECT_ROOT}}/site"
  CONFIG_PATH: "{{.PROJECT_ROOT}}/site"
  CONTENT_PATH: "{{.PROJECT_ROOT}}/site/content"
  OUTPUT_PATH: "{{.PROJECT_ROOT}}/out"
  RESOURCES_PATH: "{{.SOURCE_PATH}}/resources"
  ASSETS_LOCAL_PATH: "{{.PROJECT_ROOT}}/site/assets"
  ASSETS_REMOTE_PATH: "s3://site-assets.jxf.me"

  # Get AWS secret key if not already defined in environment.
  SECRETS_AWS_SECRET_ACCESS_KEY:
    sh: |
      test -z "$SECRETS_AWS_SECRET_ACCESS_KEY" && \
      aws configure get aws_secret_access_key --profile jxf-site || \
      echo "$SECRETS_AWS_SECRET_ACCESS_KEY"

  # Get AWS access key if not already defined in environment.
  SECRETS_AWS_ACCESS_KEY_ID:
    sh: |
      test -z "$SECRETS_AWS_ACCESS_KEY_ID" && \
      aws configure get aws_access_key_id --profile jxf-site || \
      echo "$SECRETS_AWS_ACCESS_KEY_ID"

tasks:


  clean:
    desc: "remove temporary paths"
    cmds:
      - rm -rf {{.OUTPUT_PATH}}
      - rm -rf {{.RESOURCES_PATH}}

  "sync:up":
    desc: "sync assets up to cloud"
    cmds:
      - |-
        AWS_ACCESS_KEY_ID={{.SECRETS_AWS_ACCESS_KEY_ID}} \
        AWS_SECRET_ACCESS_KEY={{.SECRETS_AWS_SECRET_ACCESS_KEY}} \
        AWS_DEFAULT_REGION=us-east-1 \
        aws s3 sync --dryrun {{.ASSETS_LOCAL_PATH}} {{.ASSETS_REMOTE_PATH}}

  "sync:down":
    desc: "sync assets down to local environment"
    cmds:
      - |-
        AWS_ACCESS_KEY_ID={{.SECRETS_AWS_ACCESS_KEY_ID}} \
        AWS_SECRET_ACCESS_KEY={{.SECRETS_AWS_SECRET_ACCESS_KEY}} \
        AWS_DEFAULT_REGION=us-east-1 \
        aws s3 sync --dryrun {{.ASSETS_REMOTE_PATH}} {{.ASSETS_LOCAL_PATH}}

  serve:
    desc: "serve website on a local webserver"
    deps: [clean]
    cmds:
      - |-
        hugo server \
          --source {{.SOURCE_PATH}} \
          --destination {{.OUTPUT_PATH}}

  build:
    desc: "build the website and save it"
    deps: [clean]
    cmds:
      - |-
        hugo \
          --source {{.SOURCE_PATH}} \
          --destination {{.OUTPUT_PATH}}

  new-post:
    desc: "add a new post (with ITEM_NAME=...)"
    preconditions:
      # Don't proceed if the name is blank.
      - test -n "$ITEM_NAME"
    cmds:
      - mkdir -p {{.CONTENT_PATH}}
      - |-
        hugo new -k post {{.ITEM_NAME}} \
          --source {{.PROJECT_ROOT}}/site
